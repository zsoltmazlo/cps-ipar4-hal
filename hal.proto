syntax = "proto3";

package inf.mit.bme.hu.cpsbox.hal;

// basic metrics for data

message Temperature {

    enum Unit {
        UNDEFINED = 0;
        CELSIUS = 1;
        FARENHEIT = 2;
        KELVIN = 3;
    }

    float value = 1;
    Unit unit = 2;
}

message Humidity {

    enum Unit {
        UNDEFINED = 0;
        RELATIVE_HUMIDITY = 1;
        ABSOLUTE_HUMIDITY = 2;
        SPECIFIC_HUMIDITY = 3;
    }

    float value = 1;
    Unit unit = 2;
}

message Pressure {

    enum Unit {
        UNDEFINED = 0;
        PASCAL = 1;
        HECTOPASCAL = 2;
        KILOPASCAL = 3;
        ATMOSPHERE = 4;
        BAR = 5;
        MILLIBAR = 6;
    }

    float value = 1;
    Unit unit = 2;
}

message Voltage {

    enum Unit {
        UNDEFINED = 0;
        MILLIVOLT = 1;
        VOLT = 2;
    }

    float value = 1;
    Unit unit = 2;
}

message Current {

    enum Unit {
        UNDEFINED = 0;
        MILLIAMPER = 1;
        AMPER = 2;
    }

    float value = 1;
    Unit unit = 2;
}

message Illuminance {

    enum Unit {
        UNDEFINED = 0;
        LUX = 1;
    }

    float value = 1;
    Unit unit = 2;
}

message Angle {

    enum Unit {
        UNDEFINED = 0;
        RADIAN = 1;
        GRADIAN = 2;
        DEGREE = 3;
    }

    float value = 1;
    Unit unit = 2;
}

enum PowerSource {
    UNDEFINED = 0;
    BATTERY = 1;
    EXTERNAL = 2;
    COLLECTOR = 3;
}

// request message should contain which data is desired by the caller

message Request {

    enum Data {
        NO_THANKS = 0;

        // all internal data is received from a sensor placed on the PCB
        // temperature: data received from BMP280 sensor
        // humidity: data received from BMP280 sensor
        // pressure: data received from BMP280 sensor
        INTERNAL_TEMPERATURE = 1;
        INTERNAL_HUMIDITY = 2;
        INTERNAL_PRESSURE = 4;

        // illuminance: data received from BH1750 sensor
        INTERNAL_ILLUMINANCE = 8;

        // external temperature is received from a DS18B20 sensor
        EXTERNAL_TEMPERATURE = 16;

        // collector tilt is the currently set angle of the solar panel
        COLLECTOR_TILT = 32;
        COLLECTOR_ROTATION = 64;

        // which power source is in use
        POWER_SOURCE = 128;

        // pijuice cap provides a battery with 1820mAh capacity to ensure a UPS
        BATTERY_VOLTAGE = 256;
        BATTERY_CURRENT = 512;
        BATTERY_STATE = 1024;

        // external power source is a 9V adapter connected to a regular power socket
        EXTERNAL_PS_VOLTAGE = 2048;
        EXTERNAL_PS_CURRENT = 4096;
        EXTERNAL_PS_STATE = 8192;

        // collector power source is a 165x135mm solar energy collector
        COLLECTOR_PS_VOLTAGE = 16384;
        COLLECTOR_PS_CURRENT = 32768;
        COLLECTOR_PS_STATE = 65536;
    }

    enum Control {
        NOTHING = 0;

        // choose which available power source should be used to feed the station
        SET_POWER_SOURCE = 1;

        // set the angle of the collector's tilt
        SET_COLLECTOR_TILT_ANGLE = 2;

        // set the angle of the collector's rotation
        SET_COLLECTOR_ROTATION_ANGLE = 4;

        // show message on display
        SHOW_MESSAGE = 8;
    }

    Data data = 1;
    Control control = 2;

    PowerSource source = 3;
    Angle tilt_angle = 4;
    Angle rotation_angle = 5;
    string message = 6;
}

message PowerSourceDetails {
    Voltage voltage = 1;
    Current current = 2;
    string state = 3;
}


message Response {

    enum Status {
        OK = 0;
        UNRECOGNISED_REQUEST = 1;
        INT_TEMPERATURE_ERROR = 2;
        HUMIDITIY_ERROR = 4;
        PRESSURE_ERROR = 8;
        ILLUMINANCE_ERROR = 16;
        EXT_TEMPERATURE_ERROR = 32;
        COLLECTOR_TILT_ERROR = 64;
        COLLECTOR_ROTATION_ERROR = 128;
        BATTERY_ERROR = 256;
        EXTERNAL_ERROR = 512;
        COLLECTOR_ERROR = 1024;
        POWER_SOURCE_ERROR = 2048;
        SHOW_MESSAGE_ERROR = 4096;
    }

    Status status = 1;
    Temperature temperature = 2;
    Humidity humidity = 3;
    Pressure pressure = 4;
    Illuminance illuminance = 5;
    Temperature externalTemperature = 6;
    Angle collectorTilt = 7;
    Angle collectorRotation = 8;
    PowerSource powerSource = 9;

    PowerSourceDetails batteryDetails = 10;
    PowerSourceDetails externalPSDetails = 11;
    PowerSourceDetails collectorPSDetails = 12;
}
